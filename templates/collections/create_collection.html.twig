{% extends "base.html.twig" %}

{% block title %}New Collection{% endblock %}

{% block body %}
<form action="{{ path('app_create_collection') }}" method="POST" id="collectionForm">
<div class="container-fluid">
	<div class="row">
		<div class="col-md-9 p-5 bg-body-tertiary rounded-5">
      <h2>New Collection</h2>
      <div class="mb-2">
        <label for="collectionName" class="form-label">Collection Name</label>
        <input type="text" class="form-control" id="collectionName" name="name" required>
      </div>
      <div class="mb-2">
        <label for="collectionDescription" class="form-label">Description</label>
        <textarea class="form-control" id="collectionDescription" name="description" rows="3" required></textarea>
      </div>
      <div class="mb-2">
        <label for="collectionCategory" class="form-label">Category</label>
        <select class="form-control" id="collectionCategory" name="category">
          <option value="Other">Other</option>
          <option value="Books">Books</option>
          <option value="Signs">Signs</option>
          <option value="Silverware">Silverware</option>
        </select>
      </div>
      
      <!-- Dynamic field containers -->
      <div id="integerFieldsContainer"></div>
      <div id="stringFieldsContainer"></div>
      <div id="textFieldsContainer"></div>
      <div id="boolFieldsContainer"></div>
      <div id="dateFieldsContainer"></div>
    
      <button type="submit" class="btn btn-success mt-2">Create</button>
		</div>

    {# Custom fields #}
		<div class="col-md-2 m-auto">
      <div class="row my-4"><button type="button" class="btn btn-outline-primary" onclick="addField('integer')">+ Add integer field</button></div>
      <div class="row my-4"><button type="button" class="btn btn-outline-primary" onclick="addField('string')">+ Add string field</button></div>
      <div class="row my-4"><button type="button" class="btn btn-outline-primary" onclick="addField('text')">+ Add text field</button></div>
      <div class="row my-4"><button type="button" class="btn btn-outline-primary" onclick="addField('bool')">+ Add bool field</button></div>
      <div class="row my-4"><button type="button" class="btn btn-outline-primary" onclick="addField('date')">+ Add date field</button></div>
		</div>
	</div>
</div>
</form>

<script>
const maxFieldsCount = 3;

function addField(type) {
  const container = document.getElementById(type + 'FieldsContainer');
  if (container.children.length < maxFieldsCount) {
    const fieldIndex = container.children.length + 1;
    const field = createField(container, type, fieldIndex);
    container.appendChild(field);
  }
  updateAddButtonVisibility(type);
}

function createField(container, type, index) {
  let field = document.createElement('div');
  field.classList.add('mb-2');
  field.dataset.type = type;

  let label = document.createElement('label');
  label.classList.add('form-label');
  label.innerText = 'Enter name of the ' + index + ' ' + type + ' field:';

  let input = document.createElement('input');
  input.type = 'text';
  input.classList.add('form-control');
  input.name = type + 'Field' + index;

  let removeButton = document.createElement('button');
  removeButton.type = 'button';
  removeButton.innerText = 'Remove';
  removeButton.classList.add('btn', 'btn-danger', 'btn-sm');
  removeButton.onclick = function() {
    container.removeChild(field);
    updateFields(container, type);
    updateAddButtonVisibility(type);
  };

  field.appendChild(label);
  field.appendChild(input);
  field.appendChild(removeButton);

  return field;
}

function updateFields(container, type) {
  const fields = container.querySelectorAll('div');
  fields.forEach((field, index) => {
    const i = index + 1;
    field.querySelector('label').innerText = 'Enter name of the ' + i + ' ' + type + ' field:';
    field.querySelector('input').name = type + 'Field' + i;
  });
}

function updateAddButtonVisibility(type) {
  const container = document.getElementById(type + 'FieldsContainer');
  const addButton = document.querySelector('button[onclick="addField(\'' + type + '\')"]');
  if (container.children.length >= maxFieldsCount) {
    addButton.style.display = 'none';
  } else {
    addButton.style.display = 'inline-block';
  }
}
</script>


{% endblock %}
